{"version":3,"sources":["webpack:///./src/components/CardPost.tsx","webpack:///./src/pages/index.tsx","webpack:///./site-config.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/site-theme.ts","webpack:///./src/components/CardProfile.tsx","webpack:///./src/components/SiteFooter.tsx","webpack:///./src/components/SiteHeader.tsx","webpack:///./src/components/Layout.tsx"],"names":["CardHover","styled","div","withConfig","displayName","componentId","CardPost","props","react","gatsby_browser_entry","to","link","style","boxShadow","textDecoration","textColor","Box","round","elevation","border","side","color","size","margin","top","bottom","right","left","cover","corner","overflow","height","background","Image","src","fit","pad","Heading","vertical","level","title","Text","dangerouslySetInnerHTML","htmlExcerpt","date","__webpack_require__","d","__webpack_exports__","pageQuery","BlogIndex","siteTitle","data","site","siteMetadata","siteDescription","description","posts","allMarkdownRemark","edges","Layout","Helmet_default","a","htmlAttributes","lang","meta","name","content","map","_ref","node","_","frontmatter","key","fields","slug","components_CardPost","__html","excerpt","childImageSharp","fluid","module","exports","siteUrl","footerText","author","authorImage","authorBio","social","twitter","github","reddit","googleAnalyticsTrackingId","theme","font","fontHeadings","brandColor","m","require","default","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","createElement","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","site_theme","global","family","siteConfig","colors","brand","breakpoints","xsmall","value","small","medium","middle","heading","CardProfile","wrap","direction","width","alt","weight","length","Button","href","icon","Twitter","Github","Reddit","Markdown","SiteFooter","align","SiteHeader","textAlign","GlobalStyle","createGlobalStyle","_templateObject","THEMES","grommet","base","dark","Grommet","siteTheme","basis","flex"],"mappings":"6LASMA,SAAYC,QAAOC,IAAVC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGJ,CAAH,0BA2DAK,EArDE,SAACC,GAAD,OACfC,EAAA,6BACEA,EAAA,cAACR,EAAD,KACEQ,EAAA,cAACC,EAAA,KAAD,CACEC,GAAIH,EAAMI,KACVC,MAAO,CACLC,UAAW,OACXC,eAAgB,OAChBC,UAAW,SAGbP,EAAA,cAACQ,EAAA,EAAD,CACEC,MAAM,QACNC,UAAU,QACVC,OAAQ,CACNC,KAAM,MACNC,MAAO,SACPC,KAAM,UAERC,OAAQ,CACNC,IAAK,QACLC,OAAQ,SACRC,MAAO,QACPC,KAAM,UAGPpB,EAAMqB,MAAQ,EACbpB,EAAA,0BAEAA,EAAA,yBACEA,EAAA,cAACQ,EAAA,EAAD,CAAKC,MAAO,CAAEK,KAAM,QAASO,OAAQ,OAASC,SAAS,UACrDtB,EAAA,cAACQ,EAAA,EAAD,CAAKe,OAAO,QAAQC,WAAW,UAC7BxB,EAAA,cAACyB,EAAA,EAAD,CAAOC,IAAK3B,EAAMqB,MAAOO,IAAI,aAMrC3B,EAAA,cAACQ,EAAA,EAAD,CAAKoB,IAAI,UACP5B,EAAA,cAAC6B,EAAA,EAAD,CAASd,OAAQ,CAAEe,SAAU,SAAWC,MAAM,KAC3ChC,EAAMiC,OAEThC,EAAA,cAACiC,EAAA,EAAD,CAAMC,wBAAyBnC,EAAMoC,cACrCnC,EAAA,cAACiC,EAAA,EAAD,CAAMlB,OAAQ,CAAEC,IAAK,SAAWF,KAAK,SAClCf,EAAMqC,qBC1DrBC,EAAAC,EAAAC,EAAA,8BAAAC,IAqDeC,UA9CG,SAAC1C,GACjB,IAAM2C,EAAY3C,EAAM4C,KAAKC,KAAKC,aAAab,MACzCc,EAAkB/C,EAAM4C,KAAKC,KAAKC,aAAaE,YAC/CC,EAAQjD,EAAM4C,KAAKM,kBAAkBC,MAE3C,OACElD,EAAA,cAACmD,EAAA,EAAD,KACEnD,EAAA,cAACoD,EAAAC,EAAD,CACEC,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASZ,IACvCd,MAAOU,IAET1C,EAAA,0BACGgD,EAAMW,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACN7B,EAAQ8B,QACZD,EAAKE,YAAY/B,MACjB,oBACA6B,GAEF,OACE7D,EAAA,qBAAKgE,IAAKH,EAAKI,OAAOC,MACQ,OAA3BL,EAAKE,YAAY3C,MAChBpB,EAAA,cAACmE,EAAD,CACEhE,KAAM0D,EAAKI,OAAOC,KAClB9C,MAAM,GACNY,MAAOA,EACPI,KAAMyB,EAAKE,YAAY3B,KACvBD,YAAa,CAAEiC,OAAQP,EAAKQ,WAG9BrE,EAAA,cAACmE,EAAD,CACEhE,KAAM0D,EAAKI,OAAOC,KAClB9C,MAAOyC,EAAKE,YAAY3C,MAAMkD,gBAAgBC,MAAM7C,IACpDM,MAAOA,EACPI,KAAMyB,EAAKE,YAAY3B,KACvBD,YAAa,CAAEiC,OAAQP,EAAKQ,iBAnC9C,IAgDa7B,EAAS,+BCxDtBgC,EAAOC,QAAU,CAKfzC,MAAO,iCACPe,YAAa,wDACb2B,QAAS,yDACTC,WACE,+EAGFC,OAAQ,aACRC,YACE,+EACFC,UACE,oSACFC,OAAQ,CACNC,QAAS,UACTC,OAAQ,UACRC,OAAQ,WAIVC,0BAAyB,4BAGzBC,MAAO,UACPC,KAAM,GACNC,aAAc,GACdC,WAAY,yBC9Bd,IAAsBC,EAKpBhB,EAAOC,SALae,EAKWC,EAAQ,OALRD,EAAEE,SAAYF,oCCA/CnD,EAAAsD,EAAApD,GAAAF,EAAAC,EAAAC,EAAA,4BAAAqD,IAAAvD,EAAAC,EAAAC,EAAA,uCAAAsD,IAAAxD,EAAAC,EAAAC,EAAA,gCAAAuD,IAAA,IAAAC,EAAA1D,EAAA,GAAA2D,EAAA3D,EAAA4D,EAAAF,GAAAG,EAAA7D,EAAA,GAAA8D,EAAA9D,EAAA4D,EAAAC,GAAAE,EAAA/D,EAAA,KAAAgE,EAAAhE,EAAA4D,EAAAG,GAAA/D,EAAAC,EAAAC,EAAA,yBAAA8D,EAAAhD,IAAAhB,EAAAC,EAAAC,EAAA,+BAAA6D,EAAA,aAAA/D,EAAAC,EAAAC,EAAA,6BAAA6D,EAAA,WAAA/D,EAAAC,EAAAC,EAAA,yBAAA6D,EAAA,OAAA/D,EAAAC,EAAAC,EAAA,4BAAA6D,EAAA,UAAA/D,EAAAC,EAAAC,EAAA,+BAAA6D,EAAA,iBAAAE,EAAAjE,EAAA,KAAAkE,EAAAlE,EAAA4D,EAAAK,GAAAjE,EAAAC,EAAAC,EAAA,iCAAAgE,EAAAlD,IAAA,IAAAmD,EAAAnE,EAAA,IAAAA,EAAAC,EAAAC,EAAA,8BAAAiE,EAAA,IAYA,IAAMX,EAAqBY,IAAMC,cAAc,IAEzCZ,EAAc,SAAA/F,GAAK,OACvBiG,EAAA3C,EAAAsD,cAACd,EAAmBe,SAApB,KACG,SAAAC,GACC,OACE9G,EAAM4C,MACLkE,EAAgB9G,EAAM+G,QAAUD,EAAgB9G,EAAM+G,OAAOnE,MAEtD5C,EAAMgH,QAAUhH,EAAMiH,UAC5BjH,EAAM4C,KAAO5C,EAAM4C,KAAKA,KAAOkE,EAAgB9G,EAAM+G,OAAOnE,MAGvDqD,EAAA3C,EAAAsD,cAAA,uCAaf,SAASf,IACP,MAAM,IAAIqB,MACR,gVATJnB,EAAYoB,UAAY,CACtBvE,KAAMwE,IAAUC,OAChBN,MAAOK,IAAUE,OAAOC,WACxBP,OAAQI,IAAUI,KAClBP,SAAUG,IAAUI,wGC7BhBC,EAAmB,SAAA5D,GAAkB,IAAf6D,EAAe7D,EAAf6D,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOpB,IAAME,cAAcmB,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBN,UAAY,CAC3BO,SAAUN,IAAUe,MAAM,CACxBL,SAAUV,IAAUE,OAAOC,aAC1BA,YAGUE,iICjBAW,EAAA,CACbC,OAAQ,CACN/C,KAAM,CACJgD,OAAQC,IAAWjD,MAErBkD,OAAQ,CACNC,MAAOF,IAAW/C,YAEpBkD,YAAa,CACXC,OAAQ,CACNC,MAAO,KAETC,MAAO,CACLD,MAAO,KAETE,OAAQ,CACNF,MAAO,MAETG,OAAQ,CACNH,MAAO,OAIbI,QAAS,CACP1D,KAAM,CACJgD,OAAQC,IAAWhD,+ECvBV0D,EAAA,kBACbhJ,EAAA,yBACEA,EAAA,cAACQ,EAAA,EAAD,CACEC,MAAM,QACNmB,IAAI,SACJb,OAAO,QACPJ,QAAQ,EACRsI,MAAM,EACN3H,SAAS,UAETtB,EAAA,cAACQ,EAAA,EAAD,CAAK0I,UAAU,kBACblJ,EAAA,cAACQ,EAAA,EAAD,CACEO,OAAQ,CAAEE,OAAQ,QAASE,KAAM,OAAQD,MAAO,SAChDT,MAAM,QACNc,OAAO,SACP4H,MAAM,SACN7H,SAAS,UAETtB,EAAA,cAACyB,EAAA,EAAD,CACEE,IAAI,QACJK,MAAOsG,IAAW1D,OAClBwE,IAAKd,IAAW1D,OAChBlD,IAAK4G,IAAWzD,eAGpB7E,EAAA,cAACQ,EAAA,EAAD,KACER,EAAA,cAACiC,EAAA,EAAD,CAAMoH,OAAO,OAAOvI,KAAK,SACtBwH,IAAW1D,UAIlB5E,EAAA,cAACQ,EAAA,EAAD,CAAK0I,UAAU,MAAMD,MAAM,GACxBX,IAAWvD,OAAOC,QAAQsE,OAAS,EAClCtJ,EAAA,cAACuJ,EAAA,EAAD,CACEC,KAAI,uBAAyBlB,IAAWvD,OAAOC,QAC/CyE,KAAMzJ,EAAA,cAAC0J,EAAA,EAAD,CAAS5I,KAAK,aAGtB,GAGDwH,IAAWvD,OAAOE,OAAOqE,OAAS,EACjCtJ,EAAA,cAACuJ,EAAA,EAAD,CACEC,KAAI,sBAAwBlB,IAAWvD,OAAOE,OAC9CwE,KAAMzJ,EAAA,cAAC2J,EAAA,EAAD,CAAQ7I,KAAK,aAGrB,GAGDwH,IAAWvD,OAAOG,OAAOoE,OAAS,EACjCtJ,EAAA,cAACuJ,EAAA,EAAD,CACEC,KAAI,2BAA6BlB,IAAWvD,OAAOG,OACnDuE,KAAMzJ,EAAA,cAAC4J,EAAA,EAAD,CAAQ9I,KAAK,aAGrB,IAGJd,EAAA,cAACQ,EAAA,EAAD,CAAKc,SAAS,UACZtB,EAAA,cAACiC,EAAA,EAAD,CAAMnB,KAAK,SACTd,EAAA,cAAC6J,EAAA,EAAD,KAAWvB,IAAWxD,gBC9DjBgF,EAAA,kBACb9J,EAAA,4BACEA,EAAA,cAACQ,EAAA,EAAD,CAAKgB,WAAW,UAAUI,IAAI,QAAQmI,MAAM,UAC1C/J,EAAA,cAAC6J,EAAA,EAAD,KAAWvB,IAAW3D,iCCFbqF,EAAA,kBACbhK,EAAA,4BACEA,EAAA,cAACQ,EAAA,EAAD,CAAKO,OAAO,SACVf,EAAA,cAACC,EAAA,KAAD,CACEG,MAAO,CACLC,UAAW,OACXC,eAAgB,QAElBJ,GAAG,KAEHF,EAAA,cAAC6B,EAAA,EAAD,CAASoI,UAAU,SAASpJ,MAAM,QAAQE,OAAO,SAC9CuH,IAAWtG,QAGhBhC,EAAA,cAACiC,EAAA,EAAD,CAAMgI,UAAU,SAASpJ,MAAM,SAC5ByH,IAAWvF,uNCRpB,IAAMmH,EAAcC,4BAAHC,KAaXC,EAAS,CACbC,kBACAC,YACAC,aA6BarH,IA1BA,SAACpD,GAAD,OACbC,EAAA,cAACyK,EAAA,EAAD,CAASrF,MAAOiF,EAAO/B,IAAWlD,OAAS,YACzCpF,EAAA,cAACyK,EAAA,EAAD,CAASrF,MAAOsF,GACd1K,EAAA,cAACkK,EAAD,MACAlK,EAAA,cAACQ,EAAA,EAAD,CAAK0I,UAAU,SAASa,MAAM,UAC5B/J,EAAA,cAACQ,EAAA,EAAD,CAAK2I,MAAM,UACTnJ,EAAA,cAACgK,EAAD,MACAhK,EAAA,0BACEA,EAAA,cAACQ,EAAA,EAAD,CAAK0I,UAAU,kBACblJ,EAAA,cAACQ,EAAA,EAAD,CAAKmK,MAAM,QAAQC,KAAK,OAAO1B,UAAU,kBACtCnJ,EAAMiH,UAEThH,EAAA,cAACQ,EAAA,EAAD,CAAKmK,MAAM,UACT3K,EAAA,2BACEA,EAAA,cAACgJ,EAAD,YAOZhJ,EAAA,cAAC8J,EAAD","file":"component---src-pages-index-tsx-aef0f15fb62aad5d5d28.js","sourcesContent":["import { Link } from 'gatsby';\nimport { Box, Heading, Image, Text } from 'grommet';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\n// Target another styled component on hover\n// https://www.styled-components.com/docs/advanced#referring-to-other-components\n// Psuedoelements, psuedoselectors, and nesting\n// https://www.styled-components.com/docs/basics#psuedoelements-psuedoselectors-and-nesting\nconst CardHover = styled.div`\n  :hover {\n    opacity: 0.8;\n  }\n`;\n\nconst CardPost = (props) => (\n  <article>\n    <CardHover>\n      <Link\n        to={props.link}\n        style={{\n          boxShadow: 'none',\n          textDecoration: 'none',\n          textColor: 'none'\n        }}\n      >\n        <Box\n          round=\"small\"\n          elevation=\"small\"\n          border={{\n            side: 'all',\n            color: 'border',\n            size: 'xsmall'\n          }}\n          margin={{\n            top: 'small',\n            bottom: 'medium',\n            right: 'small',\n            left: 'small'\n          }}\n        >\n          {props.cover < 1 ? (\n            <div />\n          ) : (\n            <div>\n              <Box round={{ size: 'small', corner: 'top' }} overflow=\"hidden\">\n                <Box height=\"small\" background=\"border\">\n                  <Image src={props.cover} fit=\"cover\" />\n                </Box>\n              </Box>\n            </div>\n          )}\n\n          <Box pad=\"medium\">\n            <Heading margin={{ vertical: 'small' }} level=\"2\">\n              {props.title}\n            </Heading>\n            <Text dangerouslySetInnerHTML={props.htmlExcerpt} />\n            <Text margin={{ top: 'small' }} size=\"small\">\n              {props.date}\n            </Text>\n          </Box>\n        </Box>\n      </Link>\n    </CardHover>\n  </article>\n);\n\nexport default CardPost;\n","import { graphql } from 'gatsby';\nimport * as _ from 'lodash/fp';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport CardPost from '../components/CardPost';\nimport Layout from '../components/Layout';\n\nconst BlogIndex = (props) => {\n  const siteTitle = props.data.site.siteMetadata.title;\n  const siteDescription = props.data.site.siteMetadata.description;\n  const posts = props.data.allMarkdownRemark.edges;\n\n  return (\n    <Layout>\n      <Helmet\n        htmlAttributes={{ lang: 'en' }}\n        meta={[{ name: 'description', content: siteDescription }]}\n        title={siteTitle}\n      />\n      <main>\n        {posts.map(({ node }) => {\n          const title = _.getOr(\n            node.frontmatter.title,\n            'frontmatter.title',\n            node\n          );\n          return (\n            <div key={node.fields.slug}>\n              {node.frontmatter.cover === null ? (\n                <CardPost\n                  link={node.fields.slug}\n                  cover=\"\"\n                  title={title}\n                  date={node.frontmatter.date}\n                  htmlExcerpt={{ __html: node.excerpt }}\n                />\n              ) : (\n                <CardPost\n                  link={node.fields.slug}\n                  cover={node.frontmatter.cover.childImageSharp.fluid.src}\n                  title={title}\n                  date={node.frontmatter.date}\n                  htmlExcerpt={{ __html: node.excerpt }}\n                />\n              )}\n            </div>\n          );\n        })}\n      </main>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            cover {\n              childImageSharp {\n                fluid {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","module.exports = {\n  //\n  // Change information to your own:\n  //\n  // Site Info:\n  title: 'Gatsby Starter Blog Grommet v2',\n  description: 'This is a DEMO site! SSG - Gatsby JS, UI - Grommet v2',\n  siteUrl: 'https://ganevru.github.io/gatsby-starter-blog-grommet/',\n  footerText:\n    '**2018**<br><br>Go here: site-config.js, and replace this text with your own', // You can use Markdown markup here\n\n  // Blog Author Info:\n  author: 'Ivan Ganev',\n  authorImage:\n    'https://pbs.twimg.com/profile_images/986603715732934656/7A4Nt68k_400x400.jpg',\n  authorBio:\n    \"Hello, I'm Ivan Ganev and I made this blog starter for Gatsby js using UI Grommet v2. <br><br>Repo of this starter: [github.com/ganevru/gatsby-starter-blog-grommet](https://github.com/ganevru/gatsby-starter-blog-grommet) <br><br>Go here: site-config.js, and replace this text with your own\", // You can use Markdown markup here\n  social: {\n    twitter: 'ganevru',\n    github: 'ganevru',\n    reddit: 'ganevru'\n  },\n\n  // Services:\n  googleAnalyticsTrackingId: `ADD YOUR TRACKING ID HERE`,\n\n  // Site Style:\n  theme: 'grommet', // dark | base | grommet\n  font: '', // Roboto\n  fontHeadings: '', // Merriweather\n  brandColor: '' // #7D4CDB\n\n  // TODO:\n  // pathPrefix: null,\n  // logo: path.resolve(__dirname, 'src/images/icon.png')\n};\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import siteConfig from '../site-config';\n\n// https://github.com/grommet/grommet/wiki/Grommet-v2-theming-documentation\n// https://github.com/grommet/grommet/tree/NEXT/src/js/themes\nexport default {\n  global: {\n    font: {\n      family: siteConfig.font\n    },\n    colors: {\n      brand: siteConfig.brandColor\n    },\n    breakpoints: {\n      xsmall: {\n        value: 500\n      },\n      small: {\n        value: 1000\n      },\n      medium: {\n        value: 1200\n      },\n      middle: {\n        value: 3000\n      }\n    }\n  },\n  heading: {\n    font: {\n      family: siteConfig.fontHeadings\n    }\n  }\n};\n","import { Box, Button, Image, Markdown, Text } from 'grommet';\nimport { Github, Reddit, Twitter } from 'grommet-icons';\nimport * as React from 'react';\n\nimport siteConfig from '../../site-config';\n\nexport default () => (\n  <div>\n    <Box\n      round=\"small\"\n      pad=\"medium\"\n      margin=\"small\"\n      border={true}\n      wrap={true}\n      overflow=\"hidden\"\n    >\n      <Box direction=\"row-responsive\">\n        <Box\n          margin={{ bottom: 'small', left: 'none', right: 'small' }}\n          round=\"small\"\n          height=\"xsmall\"\n          width=\"xsmall\"\n          overflow=\"hidden\"\n        >\n          <Image\n            fit=\"cover\"\n            title={siteConfig.author}\n            alt={siteConfig.author}\n            src={siteConfig.authorImage}\n          />\n        </Box>\n        <Box>\n          <Text weight=\"bold\" size=\"large\">\n            {siteConfig.author}\n          </Text>\n        </Box>\n      </Box>\n      <Box direction=\"row\" wrap={true}>\n        {siteConfig.social.twitter.length > 1 ? (\n          <Button\n            href={`https://twitter.com/${siteConfig.social.twitter}`}\n            icon={<Twitter size=\"medium\" />}\n          />\n        ) : (\n          ''\n        )}\n\n        {siteConfig.social.github.length > 1 ? (\n          <Button\n            href={`https://github.com/${siteConfig.social.github}`}\n            icon={<Github size=\"medium\" />}\n          />\n        ) : (\n          ''\n        )}\n\n        {siteConfig.social.reddit.length > 1 ? (\n          <Button\n            href={`https://reddit.com/user/${siteConfig.social.reddit}`}\n            icon={<Reddit size=\"medium\" />}\n          />\n        ) : (\n          ''\n        )}\n      </Box>\n      <Box overflow=\"hidden\">\n        <Text size=\"small\">\n          <Markdown>{siteConfig.authorBio}</Markdown>\n        </Text>\n      </Box>\n    </Box>\n  </div>\n);\n","import { Box, Markdown } from 'grommet';\nimport * as React from 'react';\n\nimport siteConfig from '../../site-config';\n\nexport default () => (\n  <footer>\n    <Box background=\"light-2\" pad=\"large\" align=\"center\">\n      <Markdown>{siteConfig.footerText}</Markdown>\n    </Box>\n  </footer>\n);\n","import { Link } from 'gatsby';\nimport { Box, Heading, Text } from 'grommet';\nimport * as React from 'react';\n\nimport siteConfig from '../../site-config';\n\nexport default () => (\n  <header>\n    <Box margin=\"small\">\n      <Link\n        style={{\n          boxShadow: 'none',\n          textDecoration: 'none'\n        }}\n        to=\"/\"\n      >\n        <Heading textAlign=\"center\" color=\"brand\" margin=\"small\">\n          {siteConfig.title}\n        </Heading>\n      </Link>\n      <Text textAlign=\"center\" color=\"brand\">\n        {siteConfig.description}\n      </Text>\n    </Box>\n  </header>\n);\n","import { Box, Grommet } from 'grommet';\nimport { base, dark, grommet } from 'grommet/themes';\nimport * as React from 'react';\nimport { createGlobalStyle } from 'styled-components';\n\nimport siteConfig from '../../site-config';\n\nimport siteTheme from '../site-theme';\n\nimport CardProfile from './CardProfile';\nimport SiteFooter from './SiteFooter';\nimport SiteHeader from './SiteHeader';\n\nconst GlobalStyle = createGlobalStyle`\n  img {\n    /* border-radius: 14px; */\n    max-width: 100%;\n  }\n  body {\n    margin: 0;\n  }\n  a:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst THEMES = {\n  grommet,\n  base,\n  dark\n};\n\nconst Layout = (props: any) => (\n  <Grommet theme={THEMES[siteConfig.theme || 'grommet']}>\n    <Grommet theme={siteTheme}>\n      <GlobalStyle />\n      <Box direction=\"column\" align=\"center\">\n        <Box width=\"xlarge\">\n          <SiteHeader />\n          <main>\n            <Box direction=\"row-responsive\">\n              <Box basis=\"large\" flex=\"grow\" direction=\"row-responsive\">\n                {props.children}\n              </Box>\n              <Box basis=\"medium\">\n                <aside>\n                  <CardProfile />\n                </aside>\n              </Box>\n            </Box>\n          </main>\n        </Box>\n      </Box>\n      <SiteFooter />\n    </Grommet>\n  </Grommet>\n);\n\nexport default Layout;\n"],"sourceRoot":""}